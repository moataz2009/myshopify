{%- comment -%}
必传参数：
name（视频src名称）
可选参数：
coverName(视频cover名称)：如不传，则默认为name加上-cover后缀
coverPicSuffix(封面图片格式后缀)：如不传，则默认为.jpg
extraClass（容器extra类名）：背景色, 边距等
noBtnModel（播放按钮）：如不传，则默认为false，显示播放按钮
minHeight(最低高度限制)：如不传，则默认为没有限制
no_webm(没有webm格式)：如不传，则默认为存在
video_id_suffix：如不传，则默认为页面仅存在一个视频组件
{%- endcomment -%}

{% unless coverName %}
{% assign coverName = name | append: '-cover' %}
{% endunless %}

{% unless coverPicSuffix %}
{% assign coverPicSuffix = '.jpg' %}
{% endunless %}

{% assign videoIdSuffix = '' %}
{% if video_id_suffix %}
{% assign videoIdSuffix = video_id_suffix | prepend: '_' %}
{% endif %}

<div id="{{ 'trigger-video' | append: videoIdSuffix }}"></div>
<div class="video-container w-full{% if minHeight %} h-full{% endif %} relative {{extraClass}}">
  <div class="video-cover relative{% if minHeight %} h-full{% endif %}">
    <div
      class="absolute left-0 top-0 transform w-full h-full flex justify-center items-center{% if noBtnModel %} hidden{% endif %}">
      <div class="play-btn rounded-full w-9 h-9 bg-white flex justify-center items-center">
        {{ 'triggle_pixel-black.svg' | asset_url | img_tag:'','block' }}
      </div>
    </div>
    <picture>
      <img src="{{ placeholder_gif }}" data-src="{{ coverName | append: coverPicSuffix | asset_url }}"
        class="block w-full{% if minHeight %} h-full object-cover{% endif %} lazyload" />
    </picture>
  </div>
  <div class="modal-container absolute w-full h-full opacity-0 inset-0 transition">
    <video muted loop{% unless noBtnModel %} controls{% endunless %} playsinline webkit-playsinline
      x5-video-player-type="h5" x5-video-player-fullscreen="true" x5-video-orientation="portraint"
      class="w-full h-full block object-cover">
      <source src="{{ name | append: '.mp4' | asset_url }}" type="video/mp4" />
      {% unless no_webm %}
      <source src="{{ name | append: '.webm' | asset_url }}" type="video/webm" />
      {% endunless %}
    </video>
  </div>
</div>

{{ 'TweenMax.min.js' | asset_url | script_tag }}
{{ 'ScrollMagic.js' | asset_url | script_tag }}
{{ 'animation.gsap.min.js' | asset_url | script_tag }}

<script>
  // init controller
  var controller = new ScrollMagic.Controller();
  var videoList = document.querySelectorAll(".video-container");

  videoList.forEach(item => {
    var video = item.querySelector('video');
    var playBtn = item.querySelector('.play-btn');
    var modal = item.querySelector(".modal-container");
    playBtn.onclick = function () {
      video.play();
      $(modal).css({
        'opacity': 1,
        'z-index': 1
      });
      $(modal).prev('.video-cover').css({
        'opacity': 0
      });
    }

    const triggerName = '#' + $(item).prev().attr('id');
    new ScrollMagic.Scene({
        triggerElement: triggerName,
        offset: 150
      })
      .on('enter leave', function (e) {
        if (e.type == "enter") {
          playBtn.click();
        } else {
          video.pause();
          $(modal).css({
            'opacity': 0,
            'z-index': -1
          });
          $(modal).prev('.video-cover').css({
            'opacity': 1
          });
        }
      })
      .addTo(controller)
  })
</script>